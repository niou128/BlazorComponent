@typeparam TableItem

@namespace BlazorDataGrid
@using BlazorDataGrid.Services
@inject AppState AppState
@using Microsoft.AspNetCore.Components.Web
@using BlazorNInput


@if (@Content == null)
{
    <td id="@Id">
        @ChildContent(CurrentItem)
    </td>
}
else
{
    if (BlazorDataTable.Editable)
    {
        @if (ReadOnly(NameItem, "ReadOnly"))
        {
            <td id="@Id" @onfocusout="() => BlazorDataTable.UpdateList(CurrentItem, NameItem)">
                <BlazorInputText Placeholder="PlaceHolderValue"
                                 @bind-value="InputValue"
                                 LabelError="@LabelError"
                                 ValidationPattern="@ValidationPattern"
                                 ReadOnly="true" />
            </td>
        }
        else
        {
            <td contenteditable="true" id="@Id" @onfocusout="() => BlazorDataTable.UpdateList(CurrentItem, NameItem)">
                <BlazorInputText Placeholder="PlaceHolderValue"
                                 @bind-value="InputValue"
                                 LabelError="@LabelError"
                                 ValidationPattern="@ValidationPattern" />
            </td>
        }


    }
    else
    {
        <td id="@Id">
            @((MarkupString)ConvertParamToValue(Content))
        </td>
    }
}


