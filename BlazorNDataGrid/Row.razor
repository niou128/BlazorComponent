@typeparam TItem

@namespace BlazorDataGrid
@using BlazorDataGrid.Services
@inject AppState AppState
@using Microsoft.AspNetCore.Components.Web


@if (@Content == null)
{
    <td>
        @ChildContent
    </td>
}
else
{
    if (BlazorDataTable.Editable)
    {
        @*@((MarkupString)ConvertParamToValue(Content))*@

        <td contenteditable="@(!ReadOnly(NameItem, "ReadOnly"))"
            @onfocusout="() => BlazorDataTable.UpdateList(CurrentItem, NameItem)">
            @*<BlazorInputText Placeholder="@CurrentItem.GetType().GetProperty(NameItem).GetValue(CurrentItem, null)"
                             ReadOnly="@(ReadOnly(NameItem, "ReadOnly"))"
                             @bind-Input="@ContentEditableText"
                             InputObject="@CurrentItem.GetType().GetProperty(NameItem).GetValue(CurrentItem, null)"
                             InputType="@CurrentItem.GetType().GetProperty(NameItem).PropertyType"
                             LabelError="@(BlazorDataTable.Translation["labelError"])" />*@
            <input @bind="ContentEditableText" @bind:event="oninput" placeholder="@((MarkupString)ConvertParamToValue(Content))"/>
        </td>


    }
    else
    {
        <td>
            @((MarkupString)ConvertParamToValue(Content))
        </td>
    }
}


